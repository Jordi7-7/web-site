---
interface RateInterface {
    rate: number;
    body: string;
    user: string;
    role: string;
    avatar: string;
}

interface Props {
    rate: RateInterface;
}

const { rate } = Astro.props;
---

<div class="flex flex-col p-1 hover:bg-primary rounded-3xl group bg-gray-bg transition-all">
    <div class="bg-white p-7 rounded-3xl flex flex-col gap-7">
        <div class="text-primary flex flex-row gap-2">
            {
                Array.from({ length: rate.rate }).map(() => (
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 20 20"
                        fill="currentColor"
                        class="w-5 h-5"
                    >
                        <path
                            fill-rule="evenodd"
                            d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401Z"
                            clip-rule="evenodd"
                        />
                    </svg>
                ))
            }
        </div>
        <p class="text-sm text-gray-text font-medium">
            {rate.body}
        </p>
    </div>
    <div class="flex flex-row p-6 gap-4">
        <div class="size-10 rounded-full flex justify-center items-center" >
            <img src={rate.avatar} alt="" class="rounded-full w-full h-full" >
        </div>
        <div class="flex flex-col group-hover:text-white text-black transition-all">
            <p class="font-medium">{rate.user}</p>
            <p class="text-sm">{rate.role}</p>
        </div>

    </div>
</div>
